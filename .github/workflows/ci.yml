name: ci
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  merge_group:
    branches: [main]
  workflow_call:
  workflow_dispatch:

permissions: {}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref_name != github.event.repository.default_branch }}

jobs:
  nix-check:
    permissions:
      actions: write
      contents: read

    runs-on: macos-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      # - uses: DeterminateSystems/flake-checker-action@v4

      - uses: ./.github/actions/setup-nix-cache-cachix

      - run: nix flake check

      - uses: astro/deadnix-action@ee2dbf0e5d720af59156d620d843fe4964d794ca
        with:
          create_pr: false

      - run: nix fmt

      - id: verify-changed-files
        uses: tj-actions/verify-changed-files@6ed7632824d235029086612d4330d659005af687 # v20
        with:
          fail-if-changed: true

  chezmoi:
    permissions:
      contents: read

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - run: |
          ./install.sh
          exec zsh

  context:
    strategy:
      matrix:
        os: [ubuntu-latest]

    runs-on: ${{ matrix.os }}
    steps:
      - name: Dump GitHub script context
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7
        with:
          script: console.log(JSON.stringify(context, null, 2))

      - name: Dump GitHub context
        run: echo "${GITHUB_CONTEXT}"
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}

      - name: Dump job context
        run: echo "${JOB_CONTEXT}"
        env:
          JOB_CONTEXT: ${{ toJson(job) }}

      - name: Dump steps context
        run: echo "${STEPS_CONTEXT}"
        env:
          STEPS_CONTEXT: ${{ toJson(steps) }}

      - name: Dump runner context
        run: echo "${RUNNER_CONTEXT}"
        env:
          RUNNER_CONTEXT: ${{ toJson(runner) }}

      - name: Dump strategy context
        run: echo "${STRATEGY_CONTEXT}"
        env:
          STRATEGY_CONTEXT: ${{ toJson(strategy) }}

      - name: Dump matrix context
        run: echo "${MATRIX_CONTEXT}"
        env:
          MATRIX_CONTEXT: ${{ toJson(matrix) }}

      - name: Dump environment variables
        run: ${{ (runner.os == 'Windows') && 'gci env:' || 'env | sort' }}
