name: ci
on:
  push:
    branches: [main]
    tags: ["**"]
  pull_request:
    branches: [main]
  merge_group:
    branches: [main]
  workflow_call:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  context:
    strategy:
      matrix:
        os: [ubuntu-latest]

    permissions:
      contents: read
    runs-on: ${{ matrix.os }}
    steps:
      - name: Dump GitHub script context
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7
        with:
          script: console.log(context)

      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "${GITHUB_CONTEXT}"

      - name: Dump job context
        env:
          JOB_CONTEXT: ${{ toJson(job) }}
        run: echo "${JOB_CONTEXT}"

      - name: Dump steps context
        env:
          STEPS_CONTEXT: ${{ toJson(steps) }}
        run: echo "${STEPS_CONTEXT}"

      - name: Dump runner context
        env:
          RUNNER_CONTEXT: ${{ toJson(runner) }}
        run: echo "${RUNNER_CONTEXT}"

      - name: Dump strategy context
        env:
          STRATEGY_CONTEXT: ${{ toJson(strategy) }}
        run: echo "${STRATEGY_CONTEXT}"

      - name: Dump matrix context
        env:
          MATRIX_CONTEXT: ${{ toJson(matrix) }}
        run: echo "${MATRIX_CONTEXT}"

      - name: Dump environment variables
        run: ${{ (runner.os == 'Windows') && 'gci env:' || 'env | sort' }}

  nix-check:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      # - uses: DeterminateSystems/flake-checker-action@v4

      - uses: cachix/install-nix-action@08dcb3a5e62fa31e2da3d490afc4176ef55ecd72 # v30
        with:
          github_access_token: ${{ github.token }}

      - uses: nix-community/cache-nix-action@8351fb9f51c580c96c509987ebb99e38aed956ce # v5
        with:
          primary-key: nix-${{ runner.os }}-${{ hashFiles('flake.nix', 'flake.lock') }}
          restore-prefixes-first-match: nix-${{ runner.os }}-
          restore-prefixes-all-matches: nix-${{ runner.os }}-

      - uses: cachix/cachix-action@ad2ddac53f961de1989924296a1f236fcfbaa4fc # v15
        with:
          name: cachix
          extraPullNames: nix-community,nixpkgs-unfree

      - run: nix flake check

      - run: nix fmt

  megalinter:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      # statuses: write
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - id: ml
        # You can override MegaLinter flavor used to have faster performances
        # More info at https://megalinter.io/latest/flavors/
        uses: oxsecurity/megalinter@ec124f7998718d79379a3c5b39f5359952baf21d # v8
        env:
          # All available variables are described in documentation
          # https://megalinter.io/latest/configuration/
          APPLY_FIXES: all
          DISABLE_LINTERS: SPELL_CSPELL
          GITHUB_STATUS_REPORTER: true
          GITHUB_TOKEN: ${{ github.token }}
          VALIDATE_ALL_CODEBASE: false

      - if: always()
        uses: actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08 # v4
        with:
          name: MegaLinter reports
          path: |
            megalinter-reports
            mega-linter.log

      - name: commit changes
        if: ${{ github.event_name == 'pull_request' && steps.ml.outputs.has_updated_sources == 1 }}
        env:
          # https://github.com/oxsecurity/megalinter/blob/main/.github/workflows/mega-linter.yml
          COMMIT_MESSAGE: "[MegaLinter] Apply linters fixes"
          GIT_USER_NAME: megalinter-bot
          GIT_USER_EMAIL: nicolas.vuillamy@ox.security
        run: |
          git config user.name "${GIT_USER_NAME}"
          git config user.email "${GIT_USER_EMAIL}"
          git commit --all --message "${COMMIT_MESSAGE}"
          git push
